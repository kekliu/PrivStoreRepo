#! encoding=utf8

import numpy as np

import tf.transformations as ttr

# 6 cameras
# P0=T0*W
# P1=T1*W
# ...

T0 = np.matrix([[0.0075, 0.0006, 1.0000, 0.1787],
                [-0.9385, 0.3452, 0.0068, 2.4857],
                [-0.3452, -0.9385, 0.0031, - 3.8781],
                [0, 0, 0, 1.0000]])

T1 = np.matrix([[0.0161585, -0.0104894, 0.999814, 0.103047],
                [0.989434, 0.144256, -0.0144773, -0.519505],
                [-0.144078, 0.989485, 0.0127096, 4.24393],
                [0, 0, 0, 1]])

T2 = np.matrix([[0.0034, 0.0246, 0.9997, 0.2576],
                [-0.7523, -0.6586, 0.0188, -1.9061],
                [0.6588, -0.7521, 0.0163, -4.2261],
                [0, 0, 0, 1.0000]])

T3 = np.matrix([[-0.00823478, -0.00384813, 0.999959, 0.161265],
                [0.379182, -0.925322, -0.000438292, -4.38438],
                [0.925285, 0.379163, 0.00907896, 0.326092],
                [0, 0, 0, 1]])

T4 = np.matrix([[0.0177773, 0.0121063, 0.999769, 0.206273],
                [0.0560272, 0.998343, -0.0130853, 4.20021],
                [-0.998271, 0.0562469, 0.0170696, 1.17439],
                [0, 0, 0, 1.0000]])

T5 = np.matrix([[0.983308, 0.172433, -0.0580636, -0.393906],
                [-0.173313, 0.984812, -0.0104294, 4.47925],
                [0.0553834, 0.0203185, 0.998258, 0.0879021],
                [0, 0, 0, 1]])

Tv = np.matrix([[1.0000, 0, 0, -1.2000],
                [0, 1.0000, 0, 4.3000],
                [0, 0, 1.0000, 0.2000],
                [0, 0, 0, 1.0000]])

#
# %% lidar-camera
# % Pcam1=Tcam1*Wc
# Tcam1=[0.797098   0.601814  0.0495343   0.860942
# -0.0423628    0.13756  -0.989587    0.18247
#  -0.602362     0.7867   0.135144    4.87768
# 0 0 0 1];
# % Ppano=Tpano*Wc
# Tpano=[0.0241462 -0.0112558   0.999645  0.0399737
#   0.958945   0.282888 -0.0199779   0.187877
#  -0.282563   0.959087  0.0176243     5.1806
# 0 0 0 1];
# % Ppano=Tlidarpano*Plidar
# Tlidarpano=[0.3381   -0.9378    0.0787   -1.1448
#     0.1727   -0.0204   -0.9848   -0.5683
#     0.9251    0.3466    0.1551   -0.1052
#          0         0         0    1.0000];
# % 结合上面三个公式和 P1=T1*W Pv=Tv*W
# % 可以得到Tvlidar
# % Plidar=Tvlidar*Tv
# Tvlidar=inv(Tlidarpano)*Tpano*inv(Tcam1)*T1*inv(Tv);
#

T0 = T0.I
T1 = T1.I
T2 = T2.I
T3 = T3.I
T4 = T4.I
T5 = T5.I
Tv = Tv.I

# output
print ttr.euler_from_matrix(Tv.I * T0)
print ttr.euler_from_matrix(Tv.I * T1)
print ttr.euler_from_matrix(Tv.I * T2)
print ttr.euler_from_matrix(Tv.I * T3)
print ttr.euler_from_matrix(Tv.I * T4)
print ttr.euler_from_matrix(Tv.I * T5)
# disp(out);
